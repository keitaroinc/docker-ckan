name: PR Checks

on:
  pull_request:
    branches:
      - master

jobs:
  # Find the version directories to generate the matrix for the scan job
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.set-matrix.outputs.versions }}
    steps:
      - uses: actions/checkout@v4
      - name: Find CKAN Version Directories
        id: set-matrix
        run: |
          VERSIONS=()
          for d in images/ckan/*/; do
            # Add each directory's base name (e.g., "2.10") to a bash array
            VERSIONS+=("$(basename "$d")")
          done
          # Properly format the bash array into a JSON array string
          JSON_OUTPUT=$(printf '"%s",' "${VERSIONS[@]}")
          echo "versions=[${JSON_OUTPUT%,}]" >> $GITHUB_OUTPUT

  # Lint Dockerfile for each version found
  lint:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ${{ fromJSON(needs.generate-matrix.outputs.versions) }}
    steps:
      - uses: actions/checkout@v4
      - name: Lint CKAN ${{ matrix.version }} Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./images/ckan/${{ matrix.version }}/Dockerfile

  # Build an image for each version found (amd64 + arm64)
  build:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ${{ fromJSON(needs.generate-matrix.outputs.versions) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Get docker tag for ${{ matrix.version }} image
        id: alpine
        run: |
          DOCKERFILE_PATH="./images/ckan/${{ matrix.version }}/Dockerfile"
          IMAGE_TAG=$(awk -F '=' '/IMAGE_TAG/{gsub(/"/, "");print $2;exit;}' "${DOCKERFILE_PATH}")
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Build CKAN ${{ matrix.version }}
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./images/ckan/${{ matrix.version }}
          file: ./images/ckan/${{ matrix.version }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: keitaro/ckan:${{ steps.alpine.outputs.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
