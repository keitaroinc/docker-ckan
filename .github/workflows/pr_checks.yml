name: PR Checks

on:
  pull_request:
    branches: master

jobs:
  build-ckan-2-9:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: |
            /tmp/.buildx-cache-alpine-2-9
            /tmp/.buildx-cache-ubuntu-2-9
          key: ${{ runner.os }}-buildx-2-9-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-2-9

      - name: Get docker tag for Alpine image
        id: alpine
        run: |
          echo "IMAGE_TAG=$(awk -F '=' '/IMAGE_TAG/{print $2}' ./images/ckan/2.9/Dockerfile)" >> $GITHUB_OUTPUT

      - name: Build CKAN 2.9 alpine
        uses: docker/build-push-action@v5
        with:
          context: ./images/ckan/2.9
          file: ./images/ckan/2.9/Dockerfile
          push: false
          tags: keitaro/ckan:${{ steps.alpine.outputs.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache-alpine-2-9
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-alpine-2-9

      - name: Get docker tag for Ubuntu image
        id: ubuntu
        run: |
          echo "IMAGE_TAG=$(awk -F '=' '/IMAGE_TAG/{print $2}' ./images/ckan/2.9/Dockerfile.focal)" >> $GITHUB_OUTPUT

      - name: Build CKAN 2.9 ubuntu
        uses: docker/build-push-action@v5
        with:
          context: ./images/ckan/2.9
          file: ./images/ckan/2.9/Dockerfile.focal
          push: false
          tags: keitaro/ckan:${{ steps.ubuntu.outputs.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache-ubuntu-2-9
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-ubuntu-2-9
          build-args: |
            --progress=plain

  build-ckan-datapusher:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-datapusher
          key: ${{ runner.os }}-buildx-datapusher-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-datapusher

      - name: Get docker tag for datapusher image
        id: datapusher
        run: |
          echo "IMAGE_TAG=$(awk -F '=' '/IMAGE_TAG/{print $2}' ./images/datapusher/Dockerfile)" >> $GITHUB_OUTPUT

      - name: Build CKAN datapusher
        uses: docker/build-push-action@v5
        with:
          context: ./images/datapusher
          file: ./images/datapusher/Dockerfile
          push: false
          tags: keitaro/ckandatapusher:${{ steps.datapusher.outputs.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache-datapusher
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-datapusher

  build-psql-init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-psql-init
          key: ${{ runner.os }}-buildx-psql-init-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-psql-init

      - name: Get docker tag for psql-init image
        id: psql-init
        run: |
          echo "IMAGE_TAG=$(awk -F '=' '/IMAGE_TAG/{print $2}' ./images/psql-init/Dockerfile)" >> $GITHUB_OUTPUT

      - name: Build psql-init
        uses: docker/build-push-action@v5
        with:
          context: ./images/psql-init
          file: ./images/psql-init/Dockerfile
          push: false
          tags: keitaro/psql-init:${{ steps.psql-init.outputs.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache-psql-init
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-psql-init
